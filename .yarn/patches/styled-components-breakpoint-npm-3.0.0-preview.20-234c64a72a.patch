diff --git a/dist/breakpoint.d.ts b/dist/breakpoint.d.ts
index d3c8466a42590911bcbe046dab361632f3e13006..d4c16f48db0339e14ec0197899dfadaf4bc984c0 100644
--- a/dist/breakpoint.d.ts
+++ b/dist/breakpoint.d.ts
@@ -1,4 +1,4 @@
 import { StyledProps, css } from 'styled-components';
 declare type CSSFunction = (...params: Parameters<typeof css>) => <P extends object>({ theme }: StyledProps<P>) => ReturnType<typeof css>;
-export declare const breakpoint: (breakpointA: import("./types").DefaultBreakpointName, breakpointB?: "mobile" | "tablet" | "desktop" | undefined) => CSSFunction;
+export declare const breakpoint: (breakpointA: import("./types").DefaultBreakpointName, breakpointB?: 'mobileS' | 'mobileM' | 'mobileL' | 'phablet' | 'tablet' | 'tabletL' | 'laptop' | 'laptopM' | 'laptopL' | 'desktop' | 'minimum' | undefined) => CSSFunction;
 export {};
diff --git a/dist/types.d.ts b/dist/types.d.ts
index c2922d6b70bacc48951d54fde250728e62b260b9..e3e97b00370902a24fff7965d4132ae86baabeb4 100644
--- a/dist/types.d.ts
+++ b/dist/types.d.ts
@@ -6,7 +6,7 @@ export declare type BreakpointMap<B extends BreakpointNameConstraint> = {
 declare type ThemeShape<B extends BreakpointNameConstraint> = {
     breakpoints: BreakpointMap<B>;
 };
-export declare type DefaultBreakpointName = 'mobile' | 'tablet' | 'desktop';
+export declare type DefaultBreakpointName = 'mobileS' | 'mobileM' | 'mobileL' | 'phablet' | 'tablet' | 'tabletL' | 'laptop' | 'laptopM' | 'laptopL' | 'desktop' | 'minimum';
 export declare type ThemedBreakpointName = DefaultTheme extends ThemeShape<infer B> ? B : DefaultBreakpointName;
 export declare type BreakpointFunction<B extends BreakpointNameConstraint> = (breakpointA: B, breakpointB?: B) => typeof css;
 export declare type ThemedBreakpointFunction<B extends BreakpointNameConstraint> = (breakpointA: B, breakpointB?: B) => <P extends object>(props: StyledProps<P>) => typeof css;
